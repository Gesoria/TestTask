// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderFilter.DAL;

#nullable disable

namespace OrderFilter.DAL.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20241030115828_AddLogsAndDeliveryOrder")]
    partial class AddLogsAndDeliveryOrder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("DeliveryOrderOrder", b =>
                {
                    b.Property<int>("DeliveryOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OrdersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DeliveryOrderId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("DeliveryOrdersWithOrders", (string)null);
                });

            modelBuilder.Entity("OrderFilter.DAL.Entities.CityDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CityDistricts");
                });

            modelBuilder.Entity("OrderFilter.DAL.Entities.DeliveryLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DeliveryLogs");
                });

            modelBuilder.Entity("OrderFilter.DAL.Entities.DeliveryOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CityDistrictId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartFilterTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityDistrictId");

                    b.ToTable("DeliveryOrders");
                });

            modelBuilder.Entity("OrderFilter.DAL.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityDistrictId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DeliveryDateTime")
                        .HasColumnType("TEXT");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CityDistrictId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DeliveryOrderOrder", b =>
                {
                    b.HasOne("OrderFilter.DAL.Entities.DeliveryOrder", null)
                        .WithMany()
                        .HasForeignKey("DeliveryOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderFilter.DAL.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderFilter.DAL.Entities.DeliveryOrder", b =>
                {
                    b.HasOne("OrderFilter.DAL.Entities.CityDistrict", "CityDistrict")
                        .WithMany()
                        .HasForeignKey("CityDistrictId");

                    b.Navigation("CityDistrict");
                });

            modelBuilder.Entity("OrderFilter.DAL.Entities.Order", b =>
                {
                    b.HasOne("OrderFilter.DAL.Entities.CityDistrict", "CityDistrict")
                        .WithMany()
                        .HasForeignKey("CityDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityDistrict");
                });
#pragma warning restore 612, 618
        }
    }
}
